Image processing scripts written by Daniel Matthews, QBI

1. CellProfiler_Pipeline.py

This script allows server-side execution of a CellProfiler pipeline on an image in OMERO. The user annotates an image with the pipeline (developed and tested offline) to the image being processed. The user supplies the image ID and pipeline annotation ID to the script interface along with channel names defined in the pipeline. New images are automatically uploaded to OMERO and any results files generated by the pipeline are attached to any new images. If no new images are generated the results files are attached to the original image.

2. Clear_Outside.py

This script allows a user to draw an OMERO polygon ROI and then clear the region outside this ROI by running a FIJI script server-side. The OMERO script writes the FIJI script (which is itself a Python script). The new, cleared, image is automatically uploaded to OMERO (using the command line importer).

3. Grid_Stitching.py

This script allows server-side stitching of tiled spinning disk data. The OMERO script writes a FIJI script (which is itself Python) which calls the "Grid Stitching" FIJI plugin. The user can choose to stitch all channels or any single channel and similarly for z-planes. The stitched data is automatically uploaded to OMERO (using the command line importer). At present it is not possible to prevent server time-out (despite calling on keepAlive()) and this limits the amount of data (number of tiles, channels and z-planes) that can be stitched.

4. ImageJ_Rotating_Projection.py

This is a demo script showing how to use FIJI server-side.

5. Images_From_ROIs_Advanced.py

This script is an extension of the built in "Images_From_ROIs.py" script. This allows a user to create a new child image by drawing OMERO ROIs on a parent image. This script deals with ROIs larger with any dimension larger than 4096 and also allows the use of polygon ROIs.  